# Function to get all pages of results from the Graph API
function Get-MgGraphAllPages {
    param (
        [Parameter(Mandatory = $true)]
        [string]$NextLink
    )

    $results = @()

    do {
        $response = Invoke-RestMethod -Uri $NextLink -Headers @{Authorization = "Bearer $global:token"} -Method Get
        $results += $response.value
        $NextLink = $response.'@odata.nextLink'
    } while ($NextLink)

    return $results
}

# Function to get an authentication token
function Get-AuthToken {
    param (
        [string]$tenantId,
        [string]$clientId,
        [string]$clientSecret
    )

    $body = @{
        grant_type    = "client_credentials"
        client_id     = $clientId
        client_secret = $clientSecret
        scope         = "https://graph.microsoft.com/.default"
    }

    $response = Invoke-RestMethod -Uri "https://login.microsoftonline.com/$tenantId/oauth2/v2.0/token" -Method Post -Body $body -ContentType "application/x-www-form-urlencoded"
    $global:token = $response.access_token
}

# Function to get BitLocker escrow status for Azure AD devices
function Get-BitlockerEscrowStatusForAzureADDevices {
    param (
        [string]$tenantId,
        [string]$clientId,
        [string]$clientSecret
    )

    # Get the authentication token
    Get-AuthToken -tenantId $tenantId -clientId $clientId -clientSecret $clientSecret

    # Get all BitLocker recovery keys
    $recoveryKeysUri = "https://graph.microsoft.com/beta/informationProtection/bitlocker/recoveryKeys?$select=createdDateTime,deviceId"
    $recoveryKeys = Get-MgGraphAllPages -NextLink $recoveryKeysUri

    # Get all Windows managed devices
    $managedDevicesUri = "https://graph.microsoft.com/v1.0/deviceManagement/managedDevices?$filter=operatingSystem eq 'Windows'&$select=deviceName,id,azureADDeviceId,userPrincipalName"
    $aadDevices = Get-MgGraphAllPages -NextLink $managedDevicesUri

    # Check for valid BitLocker keys in Azure
    $aadDevices | Select-Object *, @{
        Name = 'ValidRecoveryBitlockerKeyInAzure'
        Expression = {
            $deviceId = $_.azureADDeviceId
            $validRecoveryKey = $recoveryKeys | Where-Object { $_.deviceId -eq $deviceId }
            if ($validRecoveryKey) { $true } else { $false }
        }
    }
}

# Main script execution
$tenantId = "<Your Tenant ID>"
$clientId = "<Your Client ID>"
$clientSecret = "<Your Client Secret>"

Get-BitlockerEscrowStatusForAzureADDevices -tenantId $tenantId -clientId $clientId -clientSecret $clientSecret
